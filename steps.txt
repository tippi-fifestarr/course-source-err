TODO (x = done, ? = not sure)
X get the node.js server running
    x listening on port
X get the node.js server running express
X hook into mongodb 
x find all the documents
x find one document
x insertOne a document
x look up npm validation
X ejs with inputs that back end listens to
x when the user presses submit it validates the data and sends to mongodb
    ?>?insertOne? collection.insert 
xdeploy to heroku https://careerkarma.com/blog/deploy-application-to-heroku/

? front-end netlify to heroku 
? portal is a header or footer
? the partial is the hud
x students put inputs into database
build the first thing that the student would do (DOCREAD)
(unlock tippi page)

only connect to mongodb once https://stackoverflow.com/a/62169321
? css skins?

wingbird page: 1. enter Real Name (->mongodb),
     3 WingBirdName (->mongodb), 
    2 icon-choice, 
    4 and your own email (find(realname)), 
    5 object of simple exercises  

icon object: 1 <i class="fas fa-key"></i> 2 <i class="fab fa-keycdn"></i> 3 <i class="fas fa-atlas"></i> 4 <i class="fas fa-comment-slash"></i> 5 <i class="fas fa-file-import"></i> 6 <i class="fas fa-hiking"></i> 7 <i class="fas fa-clipboard-check"></i> 8 <i class="fas fa-align-justify"></i> 9 <i class="far fa-address-book"></i>


https://bezkoder.com/node-js-upload-store-images-mongodb/
https://programmerblog.net/nodejs-file-upload-tutorial/

https://docs.mongodb.com/drivers/node/fundamentals/connection

x https://docs.atlas.mongodb.com/driver-connection/
  x  have the driver
  x  TLS
  x  IP access list (0.0.0.0 ? actual ip)
  x  Database User (https://docs.mongodb.com/manual/core/security-users/)
https://docs.mongodb.com/drivers/node/

now that done:
Whatâ€™s next?

    MongoDB University Free Course: M220JS: MongoDB for Javascript Developers
 (https://bit.ly/M220JS)
 

 //dans whats next
 https://docs.mongodb.com/drivers/node/fundamentals/crud/write-operations/insert
 https://docs.mongodb.com/drivers/node/fundamentals/crud/read-operations/retrieve